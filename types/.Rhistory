# https://stat.ethz.ch/R-manual/R-devel/library/stats/html/Poisson.html
plot(xx,yy,'p',xlab='x',ylab='y',col='blue')
#Simulation window parameters
xMin=0;xMax=1;
yMin=0;yMax=1;
xDelta=xMax-xMin;
yDelta=yMax-yMin; #rectangle dimensions
areaTotal=xDelta*yDelta;
#Point process parameters
lambda=100; #intensity (ie mean density) of the Poisson process
#Simulate Poisson point process
numbPoints=rpois(1,areaTotal*lambda);#Poisson number of points
xx=xDelta*runif(numbPoints)+xMin;#x coordinates of Poisson points
yy=xDelta*runif(numbPoints)+yMin;#y coordinates of Poisson points
#Plotting
# https://stat.ethz.ch/R-manual/R-devel/library/stats/html/Poisson.html
plot(xx,yy,'p',xlab='x',ylab='y',col='blue')
#Point process parameters
lambda=200; #intensity (ie mean density) of the Poisson process
#Simulate Poisson point process
numbPoints=rpois(1,areaTotal*lambda);#Poisson number of points
xx=xDelta*runif(numbPoints)+xMin;#x coordinates of Poisson points
yy=xDelta*runif(numbPoints)+yMin;#y coordinates of Poisson points
#Plotting
# https://stat.ethz.ch/R-manual/R-devel/library/stats/html/Poisson.html
plot(xx,yy,'p',xlab='x',ylab='y',col='blue')
#Point process parameters
lambda=100; #intensity (ie mean density) of the Poisson process
#Simulate Poisson point process
numbPoints=rpois(1,areaTotal*lambda);#Poisson number of points
xx=xDelta*runif(numbPoints)+xMin;#x coordinates of Poisson points
yy=xDelta*runif(numbPoints)+yMin;#y coordinates of Poisson points
#Plotting
# https://stat.ethz.ch/R-manual/R-devel/library/stats/html/Poisson.html
plot(xx,yy,'p',xlab='x',ylab='y',col='blue')
#Point process parameters
lambda=100; #intensity (ie mean density) of the Poisson process
#Simulate Poisson point process
numbPoints=rpois(1,areaTotal*lambda);#Poisson number of points
xx=xDelta*runif(numbPoints)+xMin;#x coordinates of Poisson points
yy=xDelta*runif(numbPoints)+yMin;#y coordinates of Poisson points
#Plotting
# https://stat.ethz.ch/R-manual/R-devel/library/stats/html/Poisson.html
plot(xx,yy,'p',xlab='x',ylab='y',col='blue')
#Simulation window parameters
xMin=0;xMax=1;
yMin=0;yMax=1;
xDelta=xMax-xMin;
yDelta=yMax-yMin; #rectangle dimensions
areaTotal=xDelta*yDelta;
#Point process parameters
lambda=100; #intensity (ie mean density) of the Poisson process
#Simulate Poisson point process
numbPoints=rpois(1,areaTotal*lambda);#Poisson number of points
xx=xDelta*runif(numbPoints)+xMin;#x coordinates of Poisson points
yy=xDelta*runif(numbPoints)+yMin;#y coordinates of Poisson points
#Plotting
# https://stat.ethz.ch/R-manual/R-devel/library/stats/html/Poisson.html
plot(xx,yy,'p',xlab='x',ylab='y',col='blue')
#Point process parameters
lambda=1; #intensity (ie mean density) of the Poisson process
#Simulate Poisson point process
numbPoints=rpois(1,areaTotal*lambda);#Poisson number of points
xx=xDelta*runif(numbPoints)+xMin;#x coordinates of Poisson points
yy=xDelta*runif(numbPoints)+yMin;#y coordinates of Poisson points
#Plotting
# https://stat.ethz.ch/R-manual/R-devel/library/stats/html/Poisson.html
plot(xx,yy,'p',xlab='x',ylab='y',col='blue')
rbvn<-function (n, rho)
{
x <- rnorm(n, 0, 1)
y <- rnorm(n, rho * x, sqrt(1 - rho^2))
cbind(x, y)
}
bvn<-rbvn(10000,0.98)
par(mfrow=c(3,2))
plot(bvn,col=1:10000)
plot(bvn,type="l")
plot(ts(bvn[,1]))
plot(ts(bvn[,2]))
hist(bvn[,1],40)
hist(bvn[,2],40)
par(mfrow=c(1,1))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(bvn)
gibbs<-function (n, rho)
{
mat <- matrix(ncol = 2, nrow = n)
x <- 0
y <- 0
mat[1, ] <- c(x, y)
for (i in 2:n) {
x <- rnorm(1, rho * y, sqrt(1 - rho^2))
y <- rnorm(1, rho * x, sqrt(1 - rho^2))
mat[i, ] <- c(x, y)
}
mat
}
bvn<-gibbs(10000,0.98)
par(mfrow=c(3,2))
plot(bvn,col=1:10000)
plot(bvn,type="l")
plot(ts(bvn[,1]))
plot(ts(bvn[,2]))
hist(bvn[,1],40)
hist(bvn[,2],40)
par(mfrow=c(1,1))
intenfun <- function(x, y) 200 * x
plot(rpoispp(intenfun, lmax = 200), main = "")
intenim <- as.im(intenfun, dimyx = c(100, 100),
+ W = unit.square())
plot(rpoispp(intenim), main = "")
intenfun <- function(x, y) 200 * x
plot(rpoispp(intenfun, lmax = 200), main = "")
intenim <- as.im(intenfun, dimyx = c(100, 100),
+ W = unit.square())
plot(rpoispp(intenim), main = "")
View(intenfun)
intenfun <- function(x, y) 200 * x
plot(rpoispp(intenfun, lmax = 200), main = "")
intenim <- as.im(intenfun, dimyx = c(100, 100), W = unit.square())
plot(rpoispp(intenim), main = "")
intenfun <- function(x, y) 200 * x
plot(rpoispp(intenfun, lmax = 200), main = "")
t <- rpoispp(intenfun, lmax = 200)
View(t)
plot(rpoispp(intenfun, lmax = 100), main = "")
plot(rpoispp(intenfun, lmax = 10), main = "")
plot(rpoispp(intenfun, lmax = 10), main = "")
plot(rpoispp(intenfun, lmax = 10), main = "")
plot(rpoispp(intenfun, lmax = 10), main = "")
plot(rpoispp(intenfun, lmax = 1000), main = "")
plot(rpoispp(intenfun, lmax = 1000), main = "")
intenim <- as.im(intenfun, dimyx = c(100, 100), W = unit.square())
plot(rpoispp(intenim), main = "")
intenfun <- function(x, y) 100 * x
plot(rpoispp(intenfun, lmax = 1000), main = "")
intenfun <- function(x, y) 1000 * x
plot(rpoispp(intenfun, lmax = 1000), main = "")
intenfun <- function(x, y) 50 * x
plot(rpoispp(intenfun, lmax = 50), main = "")
intenfun <- function(x, y) 500 * x
plot(rpoispp(intenfun, lmax = 500), main = "")
t <- rpoispp(intenfun, lmax = 500)
t <- rpoispp(intenfun, lmax = 500)
intenfun <- function(x, y) x
t <- rpoispp(intenfun, lmax = 500)
plot(rpoispp(intenfun, lmax = 500), main = "")
intenfun <- function(x, y) 10 * x
t <- rpoispp(intenfun, lmax = 500)
plot(rpoispp(intenfun, lmax = 500), main = "")
intenfun <- function(x, y) 10000 * x
t <- rpoispp(intenfun, lmax = 500)
plot(rpoispp(intenfun, lmax = 500), main = "")
plot(rpoispp(intenfun, lmax = 50), main = "")
intenfun <- function(x, y) 10000 * x
t <- rpoispp(intenfun, lmax = 500)
plot(rpoispp(intenfun, lmax = 500), main = "")
intenfun <- function(x, y) 1000 * x
t <- rpoispp(intenfun, lmax = 500)
plot(rpoispp(intenfun, lmax = 500), main = "")
t <- rpoispp(intenfun, lmax = 200)
plot(rpoispp(intenfun, lmax = 200), main = "")
plot(rpoispp(intenfun, lmax = 200), main = "")
plot(rpoispp(intenfun, lmax = 200), main = "")
plot(rpoispp(intenfun, lmax = 200), main = "")
plot(rpoispp(intenfun, lmax = 200), main = "")
plot(rpoispp(intenfun, lmax = 200), main = "")
plot(rpoispp(intenfun, lmax = 200), main = "")
plot(rpoispp(intenfun, lmax = 200), main = "")
plot(rpoispp(intenfun, lmax = 200), main = "")
plot(rpoispp(intenfun, lmax = 200), main = "")
plot(rpoispp(intenfun, lmax = 200), main = "")
plot(rpoispp(intenfun, lmax = 200), main = "")
plot(rpoispp(intenfun, lmax = 200), main = "")
plot(rpoispp(intenfun, lmax = 200), main = "")
plot(rpoispp(intenfun, lmax = 200), main = "")
plot(rpoispp(intenfun, lmax = 200), main = "")
plot(rpoispp(intenfun, lmax = 200), main = "")
plot(rpoispp(intenfun, lmax = 200), main = "")
plot(rpoispp(intenfun, lmax = 200), main = "")
plot(rpoispp(intenfun, lmax = 500), main = "")
plot(rpoispp(intenfun, lmax = 500), main = "")
plot(rpoispp(intenfun, lmax = 100), main = "")
plot(rpoispp(intenfun, lmax = 100), main = "")
plot(rpoispp(intenfun, lmax = 100), main = "")
plot(rpoispp(intenfun, lmax = 100), main = "")
intenfun <- function(x, y) 100 * x
t <- rpoispp(intenfun, lmax = 200)
plot(rpoispp(intenfun, lmax = 100), main = "")
plot(rpoispp(intenfun, lmax = 100), main = "")
plot(rpoispp(intenfun, lmax = 100), main = "")
plot(rpoispp(intenfun, lmax = 100), main = "")
plot(rpoispp(intenfun, lmax = 100), main = "")
plot(rpoispp(intenfun, lmax = 100), main = "")
plot(rpoispp(intenfun, lmax = 100), main = "")
plot(rpoispp(intenfun, lmax = 100), main = "")
plot(rpoispp(intenfun), main = "")
plot(rpoispp(intenfun), main = "")
plot(rpoispp(intenfun), main = "")
plot(rpoispp(intenfun), main = "")
plot(rpoispp(intenfun), main = "")
plot(rpoispp(intenfun), main = "")
# https://www-ljk.imag.fr/membres/Jean-Francois.Coeurjolly/documents/lecture2.pdf
intenfun <- function(x, y) 0 * x
t <- rpoispp(intenfun, lmax = 200)
plot(rpoispp(intenfun, lmax = 100), main = "")
plot(rpoispp(100, lmax = 100), main = "")
plot(rpoispp(100, lmax = 100), main = "")
plot(rpoispp(100, lmax = 100), main = "")
plot(rpoispp(100, lmax = 100), main = "")
plot(rpoispp(100, lmax = 100), main = "")
plot(rpoispp(100, lmax = 100), main = "")
# homogeneous
plot(rpoispp(0, lmax = 100), main = "")
# homogeneous
plot(rpoispp(300, lmax = 100), main = "")
# homogeneous
plot(rpoispp(1000, lmax = 100), main = "")
df <- data.frame(x=integer())
# eigene Rechnung
lambda <- 100
df <- as.data.frame(lambda)
xx <- runif(10, -5, 5)
yy <- runif(10, -5, 5)
lala <- ppp(xx, yy, window = win, check = FALSE)
lala <- ppp(xx, yy, window = owin(), check = FALSE)
plot(lala, main = "")
# eigene Rechnung
lambda <- 100
xx <- runif(10, -5, 5)
yy <- runif(10, -5, 5)
lala <- ppp(xx, yy, window = owin(), check = FALSE)
plot(lala, main = "")
# https://www-ljk.imag.fr/membres/Jean-Francois.Coeurjolly/documents/lecture2.pdf
# inhomogeneous
intenfun <- function(x, y) 100 * x
t <- rpoispp(intenfun, lmax = 200)
plot(t, main = "")
help(ppp)
plot(lala, main = "", xrange=10)
plot(lala, main = "", xrange=10, yrange=10)
help(owin)
lala <- ppp(xx, yy, window = owin(xrange=10, yrange=10), check = FALSE)
plot(lala, main = "")
help(owin)
lala <- ppp(xx, yy, window = owin(xrange=c(-5,5), yrange=c(-5,5)), check = FALSE)
plot(lala, main = "")
xx <- runif(10, -5, 5)
yy <- runif(10, -5, 5)
lala <- ppp(xx, yy, window = owin(xrange=c(-5,5), yrange=c(-5,5)), check = FALSE)
xx <- runif(10, -5, 5)
yy <- runif(10, -5, 5)
lala <- ppp(xx, yy, window = owin(xrange=c(-5,5), yrange=c(-5,5)), check = FALSE)
# eigene Rechnung
lambda <- 100
df <- as.data.frame(lambda)
xx <- runif(10, -5, 5)
yy <- runif(10, -5, 5)
lala <- ppp(xx, yy, window = owin(xrange=c(-5,5), yrange=c(-5,5)), check = FALSE)
xx <- runif(10, -5, 5)
yy <- runif(10, -5, 5)
lala <- ppp(xx, yy, window = owin(xrange=c(-5,5), yrange=c(-5,5)), check = FALSE)
lala <- ppp(xx, yy, window = owin(xrange=c(-5,5), yrange=c(-5,5)), check = FALSE)
plot(lala, main = "", xrange=10, yrange=10)
xx <- runif(10, -5, 5)
yy <- runif(10, -5, 5)
lala <- ppp(xx, yy, window = owin(xrange=c(-5,5), yrange=c(-5,5)), check = FALSE)
plot(lala, main = "", xrange=10, yrange=10)
# eigene Rechnung
lambda <- 100
df <- as.data.frame(lambda)
xx <- runif(lambda, -5, 5)
yy <- runif(lambda, -5, 5)
lala <- ppp(xx, yy, window = owin(xrange=c(-5,5), yrange=c(-5,5)), check = FALSE)
plot(lala, main = "", xrange=10, yrange=10)
# eigene Rechnung
lambda <- 100
df <- as.data.frame(lambda)
xx <- runif(lambda, -5, 5)
yy <- runif(lambda, -5, 5)
lala <- ppp(xx, yy, window = owin(xrange=c(-5,5), yrange=c(-5,5)), check = FALSE)
plot(lala, main = "", xrange=10, yrange=10)
xx <- runif(lambda, 0, 5)
yy <- runif(lambda, 0, 5)
lala <- ppp(xx, yy, window = owin(xrange=c(-5,5), yrange=c(-5,5)), check = FALSE)
plot(lala, main = "", xrange=10, yrange=10)
# eigene Rechnung
lambda <- 100
df <- as.data.frame(lambda)
xx <- runif(lambda, -5, 5)
yy <- runif(lambda, -5, 5)
lala <- ppp(xx, yy, window = owin(xrange=c(-5,5), yrange=c(-5,5)), check = FALSE)
plot(lala, main = "", xrange=10, yrange=10)
result <- runifpoispp(lmax, win, nsim = nsim, drop = FALSE)
result <- runifpoispp(lmax, owin(xrange=c(-5,5), yrange=c(-5,5)), nsim = nsim, drop = FALSE)
result <- runifpoispp(lmax = 5, owin(xrange=c(-5,5), yrange=c(-5,5)), nsim = nsim, drop = FALSE)
result <- runifpoispp(50, owin(xrange=c(-5,5), yrange=c(-5,5)), nsim = nsim, drop = FALSE)
result <- runifpoispp(50, owin(xrange=c(-5,5), yrange=c(-5,5)), nsim = 5, drop = FALSE)
u01 <- owin(0:1,0:1)
plot(runifpoispp(100, u01))
u01 <- owin(0:1,0:1)
plot(runifpoispp(100, u01))
u01 <- owin(0:1,0:1)
plot(runifpoispp(100, u01))
u01 <- owin(0:1,0:1)
plot(runifpoispp(100, u01))
u01 <- owin(0:1,0:1)
plot(runifpoispp(10, u01))
u01 <- owin(0:1,0:1)
plot(runifpoispp(10, u01))
u01 <- owin(0:1,0:1)
plot(runifpoispp(10, u01))
u01 <- owin(0:1,0:1)
plot(runifpoispp(10, u01))
u01 <- owin(0:1,0:1)
plot(runifpoispp(10, u01))
# eigene Rechnung: homogeneous
le <- poissonFn(100)
poissonFn <- function(k) {
return(L ^ k / factorial(k) * exp(-L))
}
# eigene Rechnung: homogeneous
le <- poissonFn(100)
# eigene Rechnung: homogeneous
le <- poissonFn(10, 100)
poissonFn <- function(lam, k) {
return(lam ^ k / factorial(k) * exp(-lam))
}
# eigene Rechnung: homogeneous
le <- poissonFn(10, 100)
# eigene Rechnung: homogeneous
le <- poissonFn(10, 100)
# eigene Rechnung: homogeneous
le <- poissonFn(10, 100)
# eigene Rechnung: homogeneous
le <- poissonFn(10, 100)
# eigene Rechnung: homogeneous
le <- poissonFn(10, 100)
# eigene Rechnung: homogeneous
le <- poissonFn(10, 100)
u01 <- owin(0:1,0:1)
plot(runifpoispp(10, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(10, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(10, u01)) #uniform Poisson point process
# eigene Rechnung: homogeneous
lambda <- 100
meanN <- lambda * 5*5 # area(box)
n <- rpois(1, meanN)
n <- rpois(1, meanN)
n <- rpois(1, meanN)
n <- rpois(1, meanN)
n <- rpois(1, meanN)
n <- rpois(1, meanN)
u01 <- owin(0:1,0:1)
plot(runifpoispp(10, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(10, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(10, u01)) #uniform Poisson point process
plot(runifpoispp(1, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(1, u01)) #uniform Poisson point process
plot(runifpoispp(2, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(2, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(2, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(2, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(2, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(2, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(2, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(2, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(2, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(2, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(2, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(2, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(2, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(2, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(2, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(2, u01)) #uniform Poisson point process
# eigene Rechnung: homogeneous
# https://rdrr.io/cran/spatstat.core/src/R/random.R
lambda <- 100
meanN <- lambda * 1*1 # area(box)
n <- rpois(1, meanN)
n <- rpois(1, meanN)
n <- rpois(1, meanN)
n <- rpois(1, meanN)
P <- p(x) = lambda ^ x * exp(-lambda)/factorial(x)
P <-  lambda ^ meanN * exp(-lambda)/factorial(meanN)
P <-  lambda ^ meanN * exp(-lambda)/factorial(meanN)
P <-  lambda ^ meanN * exp(-lambda)/factorial(meanN)
P <-  lambda ^ meanN * exp(-lambda)/factorial(meanN)
P <-  lambda ^ meanN * exp(-lambda)/factorial(meanN)
P <-  lambda ^ meanN * exp(-lambda)/factorial(meanN)
u01 <- owin(0:1,0:1)
plot(runifpoispp(2, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(20, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(200, u01)) #uniform Poisson point process
u01 <- owin(0:1,0:1)
plot(runifpoispp(200, u01)) #uniform Poisson point process
n <- rpois(1, meanN) # n, Lambda
n <- rpois(1, meanN) # n, Lambda
n <- rpois(1, meanN) # n, Lambda
n <- rpois(1, meanN) # n, Lambda
require(spatstat)
library(ggplot2)
# help(spatstat)
# https://de.wikipedia.org/wiki/Poisson-Verteilung
df <- data.frame(k=integer(),
P=integer(),
B=integer()
)
n <- 18
L <- 3
poissonFn <- function(lam, k) {
return(lam ^ k / factorial(k) * exp(-lam))
}
bionemial <- function(n, k, p) {
return((n/k) * p ^ k * (1-p)^(n-k))
}
for (k in 1:n) {
df[nrow(df) + 1,] = c(k, poissonFn(L, k), bionemial(n, k, 0.2))
}
# ----
ggplot(df, aes(x=k, y=P)) +
geom_bar(stat = "identity") +
xlim(0, 18) +
ylim(0, 0.4)
u01 <- owin(0:1,0:1)
plot(runifpoispp(200, u01)) #uniform Poisson point process
require(spatstat)
library(ggplot2)
# help(spatstat)
# https://de.wikipedia.org/wiki/Poisson-Verteilung
df <- data.frame(k=integer(),
P=integer(),
B=integer()
)
n <- 18
L <- 3
poissonFn <- function(lam, k) {
return(lam ^ k / factorial(k) * exp(-lam))
}
bionemial <- function(n, k, p) {
return((n/k) * p ^ k * (1-p)^(n-k))
}
for (k in 1:n) {
df[nrow(df) + 1,] = c(k, poissonFn(L, k), bionemial(n, k, 0.2))
}
# ----
ggplot(df, aes(x=k, y=P)) +
geom_bar(stat = "identity") +
xlim(0, 18) +
ylim(0, 0.4)
# https://www.mas.ncl.ac.uk/~ndjw1/teaching/sim/gibbs/gibbs.html
rbvn<-function (n, rho)
{
x <- rnorm(n, 0, 1)
y <- rnorm(n, rho * x, sqrt(1 - rho^2))
cbind(x, y)
}
bvn<-rbvn(10000,0.98)
par(mfrow=c(3,2))
plot(bvn,col=1:10000)
plot(bvn,type="l")
plot(ts(bvn[,1]))
plot(ts(bvn[,2]))
hist(bvn[,1],40)
hist(bvn[,2],40)
par(mfrow=c(1,1))
gibbs<-function (n, rho)
{
mat <- matrix(ncol = 2, nrow = n)
x <- 0
y <- 0
mat[1, ] <- c(x, y)
for (i in 2:n) {
x <- rnorm(1, rho * y, sqrt(1 - rho^2))
y <- rnorm(1, rho * x, sqrt(1 - rho^2))
mat[i, ] <- c(x, y)
}
mat
}
bvn<-gibbs(10000,0.98)
par(mfrow=c(3,2))
plot(bvn,col=1:10000)
plot(bvn,type="l")
plot(ts(bvn[,1]))
plot(ts(bvn[,2]))
hist(bvn[,1],40)
hist(bvn[,2],40)
par(mfrow=c(1,1))
